generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://tjglrqezooahmn:aec1eb59456ff23ed564c5fcc7e755a96ae783aefc054fdb26d81b194313bdaf@ec2-54-75-244-161.eu-west-1.compute.amazonaws.com:5432/d7k6idhljbai49"
}

// Enums
enum Role {
  ADMIN
  USER
}

enum Type {
  CLOTHES
  SHOES
  ACCESSORIES
  DECORATION
}

enum Condition {
  NEW
  VG_CONDITION
  G_CONDITION
}

enum Category {
  WOMEN
  MEN
  CHILDREN
  HOME
}

enum ParcelType {
  SMALL
  MEDIUM
  LARGE
}

// Models
model User {
  id    String     @default(cuid()) @id
  email String  @unique
  firstname String?
  lastname String?
  password String
  username String? @unique
  token String? @unique
  tempToken String? @unique
  resetTokenExpiry Float?
  profilePicture String?
  location Location @relation(fields: [id], references: [id])
  items Item?
  role Role
  isVerified Boolean @default(value: false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Item {
  id String @default(cuid()) @id
  title String
  description String
  images String[]
  thumbnail String
  price Float
  user User @relation(fields: [id], references: [id])
  condition Condition?
  type Type[]
  categories Category[]
  size String
  color String
  brand String
  nbViews Int?
  nbLiked Int?
  parcelType ParcelType?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Location {
  id String @default(cuid()) @id
  number Int
  street String
  city String
  country String
  postalCode Int
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now()) 
}