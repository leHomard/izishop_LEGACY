"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BSON = require("bson");
// Client doc: https://mongodb.github.io/node-mongodb-native/api-bson-generated/bson.html
// Database doc: https://docs.mongodb.com/manual/reference/bson-types/
exports.scalars = [
    {
        _id: 0,
        double: new BSON.Double(0.5),
        string: 'string',
        object: { test: 'test' },
        array: [1, 2, 3],
        binary: new BSON.Binary(new Buffer(5)),
        objectId: new BSON.ObjectID(),
        boolean: true,
        date: new Date(),
        null: null,
        regex: new BSON.BSONRegExp('\\w', 'i'),
        javascript: new BSON.Code('alert("hello")'),
        int32: new BSON.Int32(10),
        timestamp: new BSON.Timestamp(10, 10),
        int64: new BSON.Long(10, 10),
        decimal128: new BSON.Decimal128(new Buffer(4)),
    },
];
exports.schemaString = "type scalars {\n  # Type Int is currently not supported for id fields.\n  _id: Int! @id\n  array: [Int] @scalarList(strategy: RELATION)\n  # Field type not supported: Binary\n  # binary: <Unknown>\n  boolean: Boolean\n  date: DateTime\n  # Field type not supported: Decimal128\n  # decimal128: <Unknown>\n  double: Float\n  int32: Int\n  int64: Int\n  # Field type not supported: Code\n  # javascript: <Unknown>\n  # Field type not supported: null\n  # null: <Unknown>\n  object: scalarsObject\n  objectId: ID\n  # Field type not supported: RegExp\n  # regex: <Unknown>\n  string: String\n  # Field type not supported: Timestamp\n  # timestamp: <Unknown>\n}\n\ntype scalarsObject @embedded {\n  test: String\n}";
//# sourceMappingURL=mongoTypes.js.map