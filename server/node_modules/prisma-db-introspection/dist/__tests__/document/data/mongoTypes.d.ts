import * as BSON from 'bson';
export declare const scalars: {
    _id: number;
    double: BSON.Double;
    string: string;
    object: {
        test: string;
    };
    array: number[];
    binary: BSON.Binary;
    objectId: BSON.ObjectId;
    boolean: boolean;
    date: Date;
    null: null;
    regex: BSON.BSONRegExp;
    javascript: BSON.Code;
    int32: BSON.Int32;
    timestamp: BSON.Timestamp;
    int64: BSON.Long;
    decimal128: BSON.Decimal128;
}[];
export declare const schemaString = "type scalars {\n  # Type Int is currently not supported for id fields.\n  _id: Int! @id\n  array: [Int] @scalarList(strategy: RELATION)\n  # Field type not supported: Binary\n  # binary: <Unknown>\n  boolean: Boolean\n  date: DateTime\n  # Field type not supported: Decimal128\n  # decimal128: <Unknown>\n  double: Float\n  int32: Int\n  int64: Int\n  # Field type not supported: Code\n  # javascript: <Unknown>\n  # Field type not supported: null\n  # null: <Unknown>\n  object: scalarsObject\n  objectId: ID\n  # Field type not supported: RegExp\n  # regex: <Unknown>\n  string: String\n  # Field type not supported: Timestamp\n  # timestamp: <Unknown>\n}\n\ntype scalarsObject @embedded {\n  test: String\n}";
