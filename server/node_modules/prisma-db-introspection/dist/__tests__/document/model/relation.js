"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var prisma_datamodel_1 = require("prisma-datamodel");
var modelSampler_1 = require("../../../databases/document/modelSampler");
var mockDataSource_1 = require("../../../test-helpers/mockDataSource");
/**
 * Checks if model sampling and inferring marks potential relation field correctly.
 */
describe('Document model inferring mark relation fields', function () {
    it('Should mark potential relation fields correctly.', function () {
        var user = {
            _id: 'id',
            fk1: 'Hello',
            fk2: '000000000000000000000000',
            field: 3,
        };
        var merger = new modelSampler_1.ModelMerger('User', false, new mockDataSource_1.MockDocumentDataSource({}));
        merger.analyze(user);
        var type = merger.getType().type;
        expect(type.fields).toHaveLength(4);
        expect(prisma_datamodel_1.SdlExpect.field(type, '_id', true, false, prisma_datamodel_1.TypeIdentifiers.string, true)
            .relationName).toBe(null);
        expect(prisma_datamodel_1.SdlExpect.field(type, 'fk1', false, false, prisma_datamodel_1.TypeIdentifiers.string)
            .relationName).toBe(modelSampler_1.ModelSampler.ErrorType);
        expect(prisma_datamodel_1.SdlExpect.field(type, 'fk2', false, false, prisma_datamodel_1.TypeIdentifiers.string)
            .relationName).toBe(modelSampler_1.ModelSampler.ErrorType);
        expect(prisma_datamodel_1.SdlExpect.field(type, 'field', false, false, prisma_datamodel_1.TypeIdentifiers.integer)
            .relationName).toBe(null);
    });
});
//# sourceMappingURL=relation.js.map