import { Renderer, DatabaseType, ISDL } from 'prisma-datamodel';
export declare abstract class IntrospectionResult {
    renderer: Renderer;
    databaseType: DatabaseType;
    constructor(databaseType: DatabaseType, renderer?: Renderer);
    /**
     * @deprecated This returns an unnormalized datamodel and might get removed in the near future.
     */
    abstract getDatamodel(): ISDL;
    renderToDatamodelString(): string;
    getNormalizedDatamodel(baseModel?: ISDL | null): ISDL;
    /**
     * Performs name normalization and order normalization.
     *
     * If a base model is given, order and additional directives are taken
     * from the base model.
     * @param baseModel
     */
    renderToNormalizedDatamodelString(baseModel?: ISDL | null): string;
}
/**
 * Metadata of a database.
 */
export interface DatabaseMetadata {
    sizeInBytes: number;
    countOfTables: number;
}
