import { IGQLType, IGQLField, ISDL } from 'prisma-datamodel';
import ModelNameNormalizer from './modelNameNormalizer';
export default class ModelNameAndDirectiveNormalizer extends ModelNameNormalizer {
    constructor(baseModel: ISDL | null);
    private findAndSetBaseByRelation;
    private findAndSetBaseById;
    private assignTypeProperties;
    /**
     * Assigns all properties from a base model field
     * to the current field, handling several special cases.
     * @param baseObj The base (reference) field.
     * @param obj The current field.
     * @param parentModel The whole model, for finding enums.
     */
    private assignFieldProperties;
    protected normalizeType(type: IGQLType, parentModel: ISDL): void;
    /**
     * Normalizes a field, handling several special cases.
     * @param baseObj The base (reference) field.
     * @param obj The current field.
     * @param parentModel The whole model, for finding enums.
     */
    protected normalizeField(field: IGQLField, parentType: IGQLType, parentModel: ISDL): void;
}
