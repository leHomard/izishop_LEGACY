"use strict";
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
function aggregateBy(data, fn) {
    var e_1, _a;
    var aggregate = {};
    try {
        for (var data_1 = __values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
            var d = data_1_1.value;
            var key = fn(d);
            var list = aggregate[key];
            if (!list) {
                aggregate[key] = [d];
            }
            else {
                list.push(d);
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return aggregate;
}
exports.aggregateBy = aggregateBy;
function aggregateFlatBy(data, fn) {
    var e_2, _a;
    var aggregate = {};
    try {
        for (var data_2 = __values(data), data_2_1 = data_2.next(); !data_2_1.done; data_2_1 = data_2.next()) {
            var d = data_2_1.value;
            var key = fn(d);
            aggregate[key] = d;
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (data_2_1 && !data_2_1.done && (_a = data_2.return)) _a.call(data_2);
        }
        finally { if (e_2) throw e_2.error; }
    }
    return aggregate;
}
exports.aggregateFlatBy = aggregateFlatBy;
//# sourceMappingURL=aggregate.js.map